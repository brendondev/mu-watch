name: mu-watch

on:
  schedule:
    - cron: "*/6 * * * *"   # a cada 6 min
  workflow_dispatch:
    inputs:
      nicks:
        description: "Lista de nicks separados por vírgula (override do watchlist)"
        required: false
        default: ""

# Execução única por workflow+branch e cancela a anterior imediatamente
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-singleton
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15             # mais folga pro job inteiro
    permissions:
      contents: write               # para commitar .state.json
    env:
      # Config padrão (pode ajustar via 'env' do step Run watcher se quiser)
      CONCURRENCY: "2"
      TIME_BUDGET_MS: "270000"      # 4.5 min (evita estourar o step)
      GIT_PERSIST: "1"              # controla se vamos commitar o .state.json
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0            # necessário para dar push

      - name: Verify source version
        run: |
          echo "HEAD watcher.js preview (linhas 1..120):"
          sed -n '1,120p' watcher.js || true
          if grep -n 'waitUntil: "networkidle"' watcher.js; then
            echo "ERRO: ainda tem networkidle no watcher.js";
            exit 1;
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install Playwright
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Prepare watchlist (override via dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.nicks != '' }}
        run: |
          echo "${{ github.event.inputs.nicks }}" | tr ',' '\n' | sed 's/^ *//; s/ *$//' > watchlist.txt
          echo "Watchlist override:"
          cat watchlist.txt

      - name: Run watcher
        timeout-minutes: 6           # abaixo do budget do job; script encerra antes
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MU_BASE_URL: https://mudream.online
          MU_CHAR_PATH: /pt/char/
          WATCHLIST_FILE: watchlist.txt
          STATE_FILE: .state.json
          CONCURRENCY: ${{ env.CONCURRENCY }}
          TIME_BUDGET_MS: ${{ env.TIME_BUDGET_MS }}
        run: |
          node -v
          node watcher.js

      - name: Commit state
        if: ${{ always() && env.GIT_PERSIST == '1' }}
        run: |
          git config user.email "bot@users.noreply.github.com"
          git config user.name "mu-watch-bot"
          git add .state.json || true
          git commit -m "update state [skip ci]" || true
          git push || true
